// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TreeStructureAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20221016181547_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Node", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("nodeid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parentid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("nodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Root"
                        },
                        new
                        {
                            Id = 2,
                            Name = "A1",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "A2",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "B1",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "B2",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "C1",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = "C2",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "C3",
                            ParentId = 4
                        });
                });

            modelBuilder.Entity("Entities.Node", b =>
                {
                    b.HasOne("Entities.Node", "ParentNode")
                        .WithMany("ChildrenNodes")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentNode");
                });

            modelBuilder.Entity("Entities.Node", b =>
                {
                    b.Navigation("ChildrenNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
